{"version":3,"sources":["webpack:///./timer.js","webpack:///./timer through class.js"],"names":["require","refs","daysRef","document","querySelector","hoursRef","minsRef","secsRef","myCalenadr","buttonStartRef","buttonStopRef","timer","flatpickr","enableTime","dateFormat","isActive","intervalId","date","Date","start","this","value","clearInterval","alert","updateClockFace","setInterval","stop","time","days","pad","Math","floor","hours","mins","secs","textContent","String","padStart","addEventListener","bind","calendarValue","daysCount","hoursCount","minsCount","secsCount","register","render","renderDays","renderHours","renderMins","renderSecs"],"mappings":"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","file":"main.9bc5f6aeb864d41e8251.js","sourcesContent":["import flatpickr from 'flatpickr';\r\nrequire('flatpickr/dist/themes/dark.css');\r\n\r\nconst refs = {\r\n  daysRef: document.querySelector('[data-value = days]'),\r\n  hoursRef: document.querySelector('[data-value = hours]'),\r\n  minsRef: document.querySelector('[data-value = mins]'),\r\n  secsRef: document.querySelector('[data-value = secs]'),\r\n  myCalenadr: document.querySelector('[data-calendar]'),\r\n  buttonStartRef: document.querySelector('[data-purpose=\"start\"]'),\r\n  buttonStopRef: document.querySelector('[data-purpose=\"stop\"]'),\r\n};\r\n\r\nconst fp = flatpickr(refs.myCalenadr, {\r\n  enableTime: true,\r\n  dateFormat: 'Y-m-d H:i',\r\n}); // flatpickr\r\n\r\nconst timer = {\r\n  isActive: false,\r\n  intervalId: null,\r\n\r\n  date: new Date(),\r\n  start() {\r\n    this.date = new Date(refs.myCalenadr.value);\r\n    if (this.date < new Date()) {\r\n      refs.myCalenadr.value = '';\r\n      clearInterval(this.intervalId);\r\n      alert('Установленная дата меньше текущей');\r\n      return;\r\n    }\r\n    if (this.isActive) {\r\n      return;\r\n    }\r\n    updateClockFace();\r\n    this.isActive = true;\r\n    this.intervalId = setInterval(() => {\r\n      updateClockFace();\r\n    }, 1000);\r\n  },\r\n  stop() {\r\n    clearInterval(this.intervalId);\r\n    this.intervalId = null;\r\n    this.isActive = false;\r\n  },\r\n};\r\n\r\nrefs.buttonStartRef.addEventListener('click', timer.start.bind(timer));\r\nrefs.buttonStopRef.addEventListener('click', timer.stop.bind(timer));\r\n\r\nfunction updateClockFace() {\r\n  const time = timer.date - new Date();\r\n\r\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n  const hours = pad(\r\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n  );\r\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n  refs.daysRef.textContent = `${days}`;\r\n  refs.hoursRef.textContent = `${hours}`;\r\n  refs.minsRef.textContent = `${mins}`;\r\n  refs.secsRef.textContent = `${secs}`;\r\n}\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n","import flatpickr from 'flatpickr';\r\nrequire('flatpickr/dist/themes/material_green.css');\r\n\r\nconst refs = {\r\n  daysRef: document.querySelector('[data-value = days__through-сlass]'),\r\n  hoursRef: document.querySelector('[data-value = hours__through-сlass]'),\r\n  minsRef: document.querySelector('[data-value = mins__through-сlass]'),\r\n  secsRef: document.querySelector('[data-value = secs__through-сlass]'),\r\n  myCalenadr: document.querySelector('[data-calendar__through-сlass]'),\r\n  buttonStartRef: document.querySelector(\r\n    '[data-purpose=\"start__through-сlass\"]',\r\n  ),\r\n  buttonStopRef: document.querySelector('[data-purpose=\"stop__through-сlass\"]'),\r\n};\r\n\r\nconst fp = flatpickr(refs.myCalenadr, {\r\n  enableTime: true,\r\n  dateFormat: 'Y-m-d H:i',\r\n}); // flatpickr\r\n\r\nclass CountdownTimer {\r\n  constructor(calendarValue, daysCount, hoursCount, minsCount, secsCount) {\r\n    this.calendarValue = calendarValue;\r\n    this.isActive = false;\r\n    this.intervalId = null;\r\n    this.date = new Date();\r\n    this.days = daysCount;\r\n    this.hours = hoursCount;\r\n    this.mins = minsCount;\r\n    this.secs = secsCount;\r\n  }\r\n\r\n  register(start, stop) {\r\n    start.addEventListener('click', this.start.bind(this));\r\n    stop.addEventListener('click', this.stop.bind(this));\r\n  }\r\n\r\n  start() {\r\n    this.date = new Date(this.calendarValue.value);\r\n\r\n    if (this.isActive) {\r\n      return;\r\n    }\r\n\r\n    if (this.date < new Date()) {\r\n      refs.myCalenadr.value = '';\r\n      clearInterval(this.intervalId);\r\n      alert('Установленная дата меньше текущей');\r\n      return;\r\n    }\r\n    this.updateClockFace();\r\n    this.isActive = true;\r\n\r\n    this.intervalId = setInterval(() => {\r\n      this.updateClockFace();\r\n    }, 1000);\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.intervalId);\r\n    this.intervalId = null;\r\n    this.isActive = false;\r\n  }\r\n\r\n  updateClockFace() {\r\n    const time = this.date - new Date();\r\n\r\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    this.render(days, hours, mins, secs);\r\n  }\r\n\r\n  render(renderDays, renderHours, renderMins, renderSecs) {\r\n    this.days.textContent = `${renderDays}`;\r\n    this.hours.textContent = `${renderHours}`;\r\n    this.mins.textContent = `${renderMins}`;\r\n    this.secs.textContent = `${renderSecs}`;\r\n  }\r\n}\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n\r\nconst newCountdownTimer = new CountdownTimer(\r\n  refs.myCalenadr,\r\n  refs.daysRef,\r\n  refs.hoursRef,\r\n  refs.minsRef,\r\n  refs.secsRef,\r\n);\r\n\r\nnewCountdownTimer.register(refs.buttonStartRef, refs.buttonStopRef);\r\n"],"sourceRoot":""}