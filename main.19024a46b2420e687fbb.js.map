{"version":3,"sources":["webpack:///./timer.js","webpack:///./timer through class.js"],"names":["require","refs","daysRef","document","querySelector","hoursRef","minsRef","secsRef","myCalenadr","buttonStartRef","buttonStopRef","timer","flatpickr","enableTime","dateFormat","isActive","intervalId","date","Date","start","this","value","clearInterval","updateClockFace","alert","setInterval","stop","time","days","pad","Math","floor","hours","mins","secs","textContent","String","padStart","addEventListener","bind","expiredDate","targetDate","register","selector","parse"],"mappings":"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","file":"main.19024a46b2420e687fbb.js","sourcesContent":["import flatpickr from 'flatpickr';\r\nrequire('flatpickr/dist/themes/dark.css');\r\n\r\nconst refs = {\r\n  daysRef: document.querySelector('[data-value = days]'),\r\n  hoursRef: document.querySelector('[data-value = hours]'),\r\n  minsRef: document.querySelector('[data-value = mins]'),\r\n  secsRef: document.querySelector('[data-value = secs]'),\r\n  myCalenadr: document.querySelector('[data-calendar]'),\r\n  buttonStartRef: document.querySelector('[data-purpose=\"start\"]'),\r\n  buttonStopRef: document.querySelector('[data-purpose=\"stop\"]'),\r\n};\r\n\r\nconst fp = flatpickr(refs.myCalenadr, {\r\n  enableTime: true,\r\n  dateFormat: 'Y-m-d H:i',\r\n}); // flatpickr\r\n\r\nconst timer = {\r\n  isActive: false,\r\n  intervalId: null,\r\n\r\n  date: new Date(),\r\n  start() {\r\n    this.date = new Date(refs.myCalenadr.value);\r\n    if (this.date < new Date()) {\r\n      refs.myCalenadr.value = '';\r\n      clearInterval(this.intervalId);\r\n      updateClockFace();\r\n      alert('Установленная дата меньше текущей');\r\n      return;\r\n    }\r\n    if (this.isActive) {\r\n      return;\r\n    }\r\n    updateClockFace();\r\n    this.isActive = true;\r\n    this.intervalId = setInterval(() => {\r\n      updateClockFace();\r\n    }, 1000);\r\n  },\r\n  stop() {\r\n    clearInterval(this.intervalId);\r\n    this.intervalId = null;\r\n    this.isActive = false;\r\n  },\r\n};\r\n\r\nrefs.buttonStartRef.addEventListener('click', timer.start.bind(timer));\r\nrefs.buttonStopRef.addEventListener('click', timer.stop.bind(timer));\r\n\r\nfunction updateClockFace() {\r\n  const time = timer.date - new Date();\r\n\r\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n  const hours = pad(\r\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n  );\r\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n  refs.daysRef.textContent = `${days}`;\r\n  refs.hoursRef.textContent = `${hours}`;\r\n  refs.minsRef.textContent = `${mins}`;\r\n  refs.secsRef.textContent = `${secs}`;\r\n}\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n","import flatpickr from 'flatpickr';\r\nrequire('flatpickr/dist/themes/material_green.css');\r\n\r\nconst refs = {\r\n  daysRef: document.querySelector('[data-value = days__through-сlass]'),\r\n  hoursRef: document.querySelector('[data-value = hours__through-сlass]'),\r\n  minsRef: document.querySelector('[data-value = mins__through-сlass]'),\r\n  secsRef: document.querySelector('[data-value = secs__through-сlass]'),\r\n  myCalenadr: document.querySelector('[data-calendar__through-сlass]'),\r\n  buttonStartRef: document.querySelector(\r\n    '[data-purpose=\"start__through-сlass\"]',\r\n  ),\r\n  buttonStopRef: document.querySelector('[data-purpose=\"stop__through-сlass\"]'),\r\n};\r\n\r\nconst fp = flatpickr(refs.myCalenadr, {\r\n  enableTime: true,\r\n  dateFormat: 'Y-m-d H:i',\r\n}); // flatpickr\r\n\r\nclass CountdownTimer {\r\n  constructor(expiredDate) {\r\n    this.expiredDate = expiredDate.targetDate;\r\n    this.isActive = false;\r\n    this.intervalId = null;\r\n    this.date = new Date();\r\n  }\r\n\r\n  register() {\r\n    refs.buttonStartRef.addEventListener('click', this.start.bind(this));\r\n    refs.buttonStopRef.addEventListener('click', this.stop.bind(this));\r\n  }\r\n\r\n  start() {\r\n    this.date = new Date(refs.myCalenadr.value);\r\n\r\n    if (this.isActive) {\r\n      return;\r\n    }\r\n\r\n    if (this.date < new Date()) {\r\n      refs.myCalenadr.value = '';\r\n      clearInterval(this.intervalId);\r\n      this.updateClockFace();\r\n      alert('Установленная дата меньше текущей');\r\n      return;\r\n    }\r\n    this.updateClockFace();\r\n    this.isActive = true;\r\n\r\n    this.intervalId = setInterval(() => {\r\n      this.updateClockFace();\r\n    }, 1000);\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.intervalId);\r\n    this.intervalId = null;\r\n    this.isActive = false;\r\n  }\r\n\r\n  updateClockFace() {\r\n    const time = this.date - new Date();\r\n\r\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    refs.daysRef.textContent = `${days}`;\r\n    refs.hoursRef.textContent = `${hours}`;\r\n    refs.minsRef.textContent = `${mins}`;\r\n    refs.secsRef.textContent = `${secs}`;\r\n  }\r\n}\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n\r\nconst newCountdownTimer = new CountdownTimer({\r\n  selector: '#timer-2',\r\n  targetDate: Date.parse(refs.myCalenadr.value),\r\n});\r\n\r\nnewCountdownTimer.register();\r\n// newCountdownTimer.registered();\r\n"],"sourceRoot":""}